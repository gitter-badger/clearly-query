{"name":"Clearly-query","tagline":"A library for constructing an sql query from a hash.","body":"# Clearly Query\r\n\r\nA library for constructing an sql query from a hash.\r\n\r\nUses [Arel](https://github.com/rails/arel) and [ActiveRecord](https://github.com/rails/rails/tree/master/activerecord).\r\n\r\n## Project Status\r\n\r\n[![Build Status](https://travis-ci.org/cofiem/clearly-query.svg?branch=master)](https://travis-ci.org/cofiem/clearly-query)\r\n[![Dependency Status](https://gemnasium.com/cofiem/clearly-query.svg)](https://gemnasium.com/cofiem/clearly-query)\r\n[![Code Climate](https://codeclimate.com/github/cofiem/clearly-query/badges/gpa.svg)](https://codeclimate.com/github/cofiem/clearly-query)\r\n[![Test Coverage](https://codeclimate.com/github/cofiem/clearly-query/badges/coverage.svg)](https://codeclimate.com/github/cofiem/clearly-query/coverage)\r\n[![Documentation Status](https://inch-ci.org/github/cofiem/clearly-query.svg?branch=master)](https://inch-ci.org/github/cofiem/clearly-query)\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'clearly-query'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install clearly-query\r\n\r\n## Usage\r\n\r\nThere are two main public classes in this gem. \r\nThe Definition class makes use of a settings declared in a model.\r\nThe Composer converts a hash of options into an Arel query.\r\n\r\n### [ClearlyQuery::Definition](lib/clearly-query/definition.rb)\r\n\r\nContains the query specification for ActiveRecord models.\r\n\r\nFor example:\r\n\r\n    ClearlyQuery::Definition.new(Customer, Customer.clearly_query_def)\r\n\r\nand\r\n\r\n    # model/customer.rb\r\n      def self.clearly_query_def\r\n        {\r\n            fields: {\r\n                valid: [:name, :last_contact_at],\r\n                text: [:name],\r\n                mappings: []\r\n            },\r\n            associations: [\r\n                {\r\n                    join: Order,\r\n                    on: Order.arel_table[:customer_id].eq(Customer.arel_table[:id]),\r\n                    available: true,\r\n                    associations: []\r\n                }\r\n            ],\r\n            defaults: {\r\n                order_by: :created_at,\r\n                direction: :desc\r\n            }\r\n        }\r\n      end\r\n\r\n### [ClearlyQuery::Composer](lib/clearly-query/composer.rb)\r\n\r\nUsed to construct an Arel query from a hash of options.\r\n\r\nFor example:\r\n\r\n    composer = ClearlyQuery::Composer.from_active_record\r\n    composer.query(Customer, {name: {contains: 'test'}})\r\n\r\n## Contributing\r\n\r\n1. [Fork this repo](https://github.com/cofiem/clearly-query/fork)\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create a new [pull request](https://github.com/cofiem/clearly-query/compare)\r\n\r\n## More Information about Arel\r\n\r\n - [Using Arel to Compose SQL Queries](http://robots.thoughtbot.com/using-arel-to-compose-sql-queries)\r\n - [The definitive guide to Arel, the SQL manager for Ruby](http://jpospisil.com/2014/06/16/the-definitive-guide-to-arel-the-sql-manager-for-ruby.html)\r\n","google":"UA-69270503-1","note":"Don't delete this file! It's used internally to help with page regeneration."}